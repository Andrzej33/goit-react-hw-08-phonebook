{"version":3,"file":"static/js/751.0614927d.chunk.js","mappings":"mOAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4xCAgEJE,GAAeF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,kJ,kIC7DnBI,EAAiBC,EAAAA,KAAaC,MAAM,CACtCC,KAAMF,EAAAA,KAAaG,SAAS,kBAC5BC,MAAOJ,EAAAA,KAAaK,IAAI,EAAG,sCAAsCD,MAAM,yBAAyBD,SAAS,kBACzGG,SAAUN,EAAAA,KAAaK,IAAI,EAAG,sCAAsCF,SAAS,kBAC1EI,UAAU,qCACVJ,SAAS,oBAGHK,EAAe,WAGxB,IAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OACA,SAAC,KAAD,CACEC,cAAe,CACbT,KAAM,GACNE,MAAO,GACPE,SAAS,IAEXM,iBAAkBb,EAClBc,SAlBmB,SAACC,EAAQC,GAM5BN,GAASO,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACT,EAGD,UASE,UAAC,IAAD,YACE,2CACA,SAAC,KAAD,CAAOf,KAAK,UACZ,SAAC,IAAD,CAAcA,KAAK,OAAOgB,UAAU,UACpC,sCACA,SAAC,KAAD,CAAOC,KAAK,QAAQjB,KAAK,WACzB,SAAC,IAAD,CAAcA,KAAK,QAAQgB,UAAU,UACrC,yCACA,SAAC,KAAD,CAAOC,KAAK,WAAWjB,KAAK,cAC5B,SAAC,IAAD,CAAcA,KAAK,WAAWgB,UAAU,UACxC,mBAAQC,KAAK,SAAb,yBAIP,EC1CD,EATqB,WAElB,OACC,SAACX,EAAD,GAGH,C","sources":["components/ContactForm/Form.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormOfContacts,ErrorMessage as FormikError } from 'formik';\n\nexport const Form = styled(FormOfContacts)`\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 20px;\n  border: solid #ff6f00 2px;\n  border-radius: 10px;\n\n  label {\n    padding-left: 20px;\nmargin-bottom: 10px;\n    display: block;\n    font-size: 18px;\n    color: #666;\n   \n    cursor: pointer;\n  }\n\n  input {\n    background: #ecf0f3;\n    padding: 10px;\n    padding-left: 20px;\n    height: 40px;\n    font-size: 20px;\n    border-radius: 50px;\n    box-shadow: inset 6px 6px 6px #cbced1, inset -6px -6px 6px white;\n    border: 1px solid #999;\n    outline: none;\n    margin-bottom: 15px;\n\n    &:focus {\n      border-color: #ff6f00;\n    }\n  }\n\n  button {\n    // margin-top: 30px;\n    font-size: 16px;\n    max-width: 170px;\n    margin: 0 auto;\n    padding: 10px 20px;\n    border-radius: 20px;\n    border: solid transparent 1px;\n    background-color: #ff6f00;\n    color: white;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    display: inline-block;\n    cursor: pointer;\n    margin-top: 20px;\n    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n      border: solid #ff6f00 1px;\n      background-color: #fff;\ncolor: #ff6f00;\n      box-shadow: 0px 10px 15px -6px rgba(88, 85, 85, 0.2);\n    }\n  }\n`;\n\n\nexport const ErrorMessage = styled(FormikError)`\nmargin-bottom: 20px;\n  font-size: 14px;\n  padding-left: 20px;\n  color:red;\n  /* color: {p => p.theme.color.accent} */\n`","import { Formik, Field } from 'formik';\nimport { Form, ErrorMessage } from 'components/ContactForm/Form.styled';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'Redux/operations';\nimport * as Yup from 'yup';\n\nconst ContactsSchema = Yup.object().shape({\n    name: Yup.string().required('Required field'),\n    email: Yup.string().min(5, 'must be at least 5 characters long').email('must be a valid email').required('Required field'),\n    password: Yup.string().min(8, 'must be at least 8 characters long').required('Required field')\n      .typeError(\"That doesn't look like a password\")\n      .required('Required field'),\n  });\n\nexport const RegisterForm = () => {\n\n   \n    const dispatch = useDispatch();\n  \n    const handleSubmit = (values, actions) => {\n  \n  // const {name,email,password} = values;\n  // if(!name.trim().length && email.trim().length < 5 && password.trim().length <= 8){\n  //   return prompt('do correct fullfield form')\n  // }\n      dispatch(register(values));\n      actions.resetForm();\n    };\n\n    return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password:'',\n      }}\n      validationSchema={ContactsSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <label>User name </label>\n        <Field name=\"name\" />\n        <ErrorMessage name=\"name\" component=\"span\" />\n        <label>Email</label>\n        <Field type=\"email\" name=\"email\" />\n        <ErrorMessage name=\"email\" component=\"span\" />\n        <label>Password</label>\n        <Field type=\"password\" name=\"password\" />\n        <ErrorMessage name=\"password\" component=\"span\" />\n        <button type=\"submit\">Confirm</button>\n      </Form>\n    </Formik>\n  ); \n}","import { RegisterForm } from \"components/RegisterForm/RegisterForm\";\n\nconst RegisterPage = () => {\n\n   return(\n    <RegisterForm/>\n   )\n    \n}\n\n\nexport default RegisterPage;"],"names":["Form","styled","FormOfContacts","ErrorMessage","FormikError","ContactsSchema","Yup","shape","name","required","email","min","password","typeError","RegisterForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","component","type"],"sourceRoot":""}