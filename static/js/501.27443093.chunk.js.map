{"version":3,"file":"static/js/501.27443093.chunk.js","mappings":"mOAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,ywCA8DJE,GAAeF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,qJ,2IC1DnBI,EAAiBC,EAAAA,KAAaC,MAAM,CACxCC,MAAOF,EAAAA,KACJG,IAAI,EAAG,sCACPD,MAAM,yBACNE,SAAS,kBACZC,SAAUL,EAAAA,KACPG,IAAI,EAAG,sCACPC,SAAS,kBACTE,UAAU,qCACVF,SAAS,oBAGDG,EAAY,WACvB,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,MAWjB,OACE,SAAC,KAAD,CACEC,cAAe,CACbX,MAAO,GACPG,SAAU,IAEZS,iBAAkBf,EAClBgB,SAhBiB,SAACC,EAAQC,GACxBD,EAAOd,MAAMgB,OAAOC,OAAS,GAAKH,EAAOX,SAASa,OAAOC,OAAS,IAItER,GAASS,EAAAA,EAAAA,IAAMJ,IACfC,EAAQI,YACT,EAGC,UAQE,UAAC,IAAD,WACGb,IAAS,uBAAIA,KACd,sCACA,SAAC,KAAD,CAAOc,KAAK,WACZ,SAAC,IAAD,CAAcA,KAAK,QAAQC,UAAU,UACrC,yCACA,SAAC,KAAD,CAAOC,KAAK,WAAWF,KAAK,cAC5B,SAAC,IAAD,CAAcA,KAAK,WAAWC,UAAU,UACxC,mBAAQC,KAAK,SAAb,uBAIP,EC/CD,EAJkB,WAChB,OAAO,SAACjB,EAAD,GACR,C","sources":["components/ContactForm/Form.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormOfContacts, ErrorMessage as FormikError } from 'formik';\n\nexport const Form = styled(FormOfContacts)`\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 20px;\n  border: solid #ff6f00 2px;\n  border-radius: 10px;\n\n  label {\n    padding-left: 20px;\n    margin-bottom: 10px;\n    display: block;\n    font-size: 18px;\n    color: #666;\n\n    cursor: pointer;\n  }\n\n  input {\n    background: #ecf0f3;\n    padding: 10px;\n    padding-left: 20px;\n    height: 40px;\n    font-size: 20px;\n    border-radius: 50px;\n    box-shadow: inset 6px 6px 6px #cbced1, inset -6px -6px 6px white;\n    border: 1px solid #999;\n    outline: none;\n    margin-bottom: 15px;\n\n    &:focus {\n      border-color: #ff6f00;\n    }\n  }\n\n  button {\n    font-size: 16px;\n    max-width: 170px;\n    margin: 0 auto;\n    padding: 10px 20px;\n    border-radius: 20px;\n    border: solid transparent 1px;\n    background-color: #ff6f00;\n    color: white;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    display: inline-block;\n    cursor: pointer;\n    margin-top: 20px;\n    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n      border: solid #ff6f00 1px;\n      background-color: #fff;\n      color: #ff6f00;\n      box-shadow: 0px 10px 15px -6px rgba(88, 85, 85, 0.2);\n    }\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  margin-bottom: 20px;\n  font-size: 14px;\n  padding-left: 20px;\n  color: red;\n  /* color: {p => p.theme.color.accent} */\n`;\n","import { Formik, Field } from 'formik';\nimport { Form, ErrorMessage } from 'components/ContactForm/Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from 'Redux/operations';\nimport * as Yup from 'yup';\nimport { selectError } from 'Redux/selectors';\n\nconst ContactsSchema = Yup.object().shape({\n  email: Yup.string()\n    .min(5, 'must be at least 5 characters long')\n    .email('must be a valid email')\n    .required('Required field'),\n  password: Yup.string()\n    .min(8, 'must be at least 8 characters long')\n    .required('Required field')\n    .typeError(\"That doesn't look like a password\")\n    .required('Required field'),\n});\n\nexport const LoginForm = () => {\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    if (values.email.trim().length < 4 || values.password.trim().length < 7) {\n      return;\n    }\n\n    dispatch(login(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={ContactsSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        {error && <b>{error}</b>}\n        <label>Email</label>\n        <Field name=\"email\" />\n        <ErrorMessage name=\"email\" component=\"span\" />\n        <label>Password</label>\n        <Field type=\"password\" name=\"password\" />\n        <ErrorMessage name=\"password\" component=\"span\" />\n        <button type=\"submit\">Login</button>\n      </Form>\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return <LoginForm />;\n};\n\nexport default LoginPage;\n"],"names":["Form","styled","FormOfContacts","ErrorMessage","FormikError","ContactsSchema","Yup","shape","email","min","required","password","typeError","LoginForm","error","useSelector","selectError","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","trim","length","login","resetForm","name","component","type"],"sourceRoot":""}