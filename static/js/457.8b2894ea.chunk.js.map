{"version":3,"file":"static/js/457.8b2894ea.chunk.js","mappings":"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","sources":["components/ContactForm/Form.styled.jsx","components/ContactForm/ContactForm.jsx","components/EditForm/EditForm.jsx","components/ContactModal/ContactModal.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Title/Title.styled.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormOfContacts, ErrorMessage as FormikError } from 'formik';\n\nexport const Form = styled(FormOfContacts)`\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 20px;\n  border: solid #ff6f00 2px;\n  border-radius: 10px;\n\n  label {\n    padding-left: 20px;\n    margin-bottom: 10px;\n    display: block;\n    font-size: 18px;\n    color: #666;\n\n    cursor: pointer;\n  }\n\n  input {\n    background: #ecf0f3;\n    padding: 10px;\n    padding-left: 20px;\n    height: 40px;\n    font-size: 20px;\n    border-radius: 50px;\n    box-shadow: inset 6px 6px 6px #cbced1, inset -6px -6px 6px white;\n    border: 1px solid #999;\n    outline: none;\n    margin-bottom: 15px;\n\n    &:focus {\n      border-color: #ff6f00;\n    }\n  }\n\n  button {\n    font-size: 16px;\n    max-width: 170px;\n    margin: 0 auto;\n    padding: 10px 20px;\n    border-radius: 20px;\n    border: solid transparent 1px;\n    background-color: #ff6f00;\n    color: white;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    display: inline-block;\n    cursor: pointer;\n    margin-top: 20px;\n    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n      border: solid #ff6f00 1px;\n      background-color: #fff;\n      color: #ff6f00;\n      box-shadow: 0px 10px 15px -6px rgba(88, 85, 85, 0.2);\n    }\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  margin-bottom: 20px;\n  font-size: 14px;\n  padding-left: 20px;\n  color: red;\n  /* color: {p => p.theme.color.accent} */\n`;\n","import { Formik, Field } from 'formik';\nimport { Form, ErrorMessage } from './Form.styled';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'Redux/selectors';\nimport { addContact } from 'Redux/operations';\nimport { useToast } from '@chakra-ui/react';\n\n// const  phoneRegEx = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst ContactsSchema = Yup.object().shape({\n  name: Yup.string().required('Required field'),\n  number: Yup.number()\n    .typeError(\"That doesn't look like a phone number\")\n    .positive(\"A phone number can't start with a minus\")\n    .integer(\"A phone number can't include a decimal point\")\n    .required('Required field'),\n});\n\nconst createToaster = (value, type) => {\n  const options = {\n    title: `${type}`,\n    description: `${value} is already in contacts`,\n    status: 'warning',\n    duration: 6000,\n    isClosable: true,\n    position: 'top-left',\n  };\n  return options;\n};\n\nexport const ContactForm = () => {\n  const toast = useToast();\n  const { items } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    if (\n      items.find(\n        contact => contact.name.toLowerCase() === values.name.toLowerCase()\n      )\n    ) {\n      toast(createToaster(values.name, 'name'));\n\n      return;\n    }\n    if (items.find(contact => contact.number === values.number)) {\n      toast(createToaster(values.number, 'number'));\n\n      return;\n    }\n\n    dispatch(addContact(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={ContactsSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <label>Name </label>\n        <Field name=\"name\" />\n        <ErrorMessage name=\"name\" component=\"span\" />\n        <label>Number</label>\n        <Field type=\"tel\" name=\"number\" />\n        <ErrorMessage name=\"number\" component=\"span\" />\n        <button type=\"submit\">Add contact</button>\n      </Form>\n    </Formik>\n  );\n};\n","import { Form } from 'components/ContactForm/Form.styled';\nimport { Formik, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'Redux/operations';\nimport PropTypes from 'prop-types';\n\nexport const EditForm = ({ id, name, number, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    const editedContact = {\n      id,\n      name: values.name,\n      number: values.number,\n    };\n\n    dispatch(editContact(editedContact));\n\n    onClose();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: name,\n        number: number,\n      }}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <label>Name </label>\n        <Field name=\"name\" />\n        <label>Number</label>\n        <Field type=\"tel\" name=\"number\" />\n        <button type=\"submit\">Edit contact</button>\n      </Form>\n    </Formik>\n  );\n};\n\n\nEditForm.propTypes = {\n  id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onClose:PropTypes.func.isRequired,\n };\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n} from '@chakra-ui/react';\nimport { useDisclosure } from '@chakra-ui/react';\nimport { EditForm } from 'components/EditForm/EditForm';\n\nexport const ContactModal = ({ id, name, number }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <Button onClick={onOpen}>edit</Button>\n\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Edit Your Contact</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <EditForm id={id} name={name} number={number} onClose={onClose} />\n          </ModalBody>\n\n          <ModalFooter></ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BtnBox = styled.div`\n  display: flex;\n  gap: 30px;\n  padding-right: 10px;\n  align-items: center;\n  @media screen and (max-width: 520px) {\n    flex-direction: column;\n    align-items: unset;\n    margin-top: 5px;\n    margin-bottom: 5px;\n  }\n  button {\n    height: 40px;\n    font-family: Lato;\n    font-weight: 300;\n    font-size: 16px;\n    color: rgb(255, 111, 0);\n    background-color: #0066cc;\n    padding: 5px 20px;\n    border: solid #e9c46a 0px;\n\n    border-radius: 6px;\n    transition: 352ms;\n    transform: translateY(0);\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    cursor: pointer;\n\n    text-transform: uppercase;\n    @media screen and (max-width: 520px) {\n      padding: 5px 20px;\n    }\n\n    &:hover {\n      transition: 352ms;\n\n      transform: translateY(-0px);\n      background-color: #fff;\n      color: #0066cc;\n      border: solid 0px #0066cc;\n    }\n  }\n`;\n","import { deleteContact } from 'Redux/operations';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { ContactModal } from 'components/ContactModal/ContactModal';\nimport { BtnBox } from './ContactItem.styled';\n\nexport const ContactItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <p>\n        {name}: <span>{number}</span>\n      </p>\n\n      <BtnBox>\n        <ContactModal id={id} name={name} number={number} />\n        <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n          delete\n        </button>\n      </BtnBox>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListOfContacts = styled.ul`\n  padding-left: 10px;\n  counter-reset: li;\n\n  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);\n  li {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    background: #dad2ca;\n    color: #444;\n    border-radius: 0.3em;\n    transition: 0.3s ease-out;\n    &:hover {\n      background: #e9e4e0;\n    }\n    &:not(:last-child) {\n      margin-bottom: 20px;\n    }\n    p {\n      text-transform: capitalize;\n\n      font-size: 24px;\n      position: relative;\n      display: block;\n      padding: 0.4em 0.4em 0.4em 2em;\n    }\n  }\n`;\n","import { ContactItem } from '../ContactItem/ContactItem';\nimport { useEffect } from 'react';\nimport { ListOfContacts } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectFilteredContacts } from 'Redux/selectors';\nimport { fetchContacts } from 'Redux/operations';\nimport { Spinner, Center } from '@chakra-ui/react';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(selectContacts);\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ListOfContacts>\n      {isLoading && (\n        <Center w=\"100%\">\n          <Spinner\n            thickness=\"5px\"\n            speed=\"0.55s\"\n            emptyColor=\"gray.200\"\n            color=\"blue.500\"\n            size=\"xl\"\n          />\n        </Center>\n      )}\n\n      {filteredContacts.length !== 0 ? (\n        filteredContacts.map(contact => {\n          return (\n            <li key={contact.id}>\n              <ContactItem contact={contact} />\n            </li>\n          );\n        })\n      ) : (\n        <h3 style={{ paddingLeft: '40px' }}>\n          There are no apropriate contacts\n        </h3>\n      )}\n    </ListOfContacts>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterBox = styled.div`\n  display: flex;\n  gap: 20px;\n  padding-left: 40px;\n  align-items: center;\n  margin-bottom: 20px;\n  @media screen and (max-width: 440px) {\n    flex-direction: column;\n  }\n  input {\n    background: #ecf0f3;\n    padding: 10px;\n    padding-left: 20px;\n    height: 36px;\n    font-size: 16px;\n    border-radius: 40px;\n    box-shadow: inset 6px 6px 6px #cbced1, inset -6px -6px 6px white;\n    border: 1px solid #999;\n    outline: none;\n  }\n  label {\n    color: brown;\n    font-size: 24px;\n    font-weight: bold;\n  }\n`;\n","import { FilterBox } from './Filter.styled';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { show } from 'Redux/filterSlice';\nimport { selectFilter } from 'Redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const onChange = e => {\n    const filterValue = e.currentTarget.value.trim();\n    dispatch(show(filterValue));\n  };\n\n  const filterValue = useSelector(selectFilter);\n  return (\n    <FilterBox>\n      <label htmlFor=\"\">Find contacts by name</label>\n      <input type=\"text\" value={filterValue} onChange={onChange} />\n    </FilterBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 38px;\n  letter-spacing: 0.1em;\n  text-align: center;\n  color: darkblue;\n  margin: 30px;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Title } from 'components/Title/Title.styled';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","FormOfContacts","ErrorMessage","FormikError","ContactsSchema","Yup","shape","name","required","number","typeError","positive","integer","createToaster","value","type","title","description","status","duration","isClosable","position","ContactForm","toast","useToast","items","useSelector","selectContacts","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","find","contact","toLowerCase","addContact","resetForm","component","EditForm","id","onClose","editedContact","editContact","ContactModal","useDisclosure","isOpen","onOpen","onClick","BtnBox","ContactItem","deleteContact","ListOfContacts","ContactList","isLoading","filteredContacts","selectFilteredContacts","useEffect","fetchContacts","w","thickness","speed","emptyColor","color","size","length","map","style","paddingLeft","FilterBox","Filter","filterValue","selectFilter","htmlFor","onChange","e","currentTarget","trim","show","Title"],"sourceRoot":""}